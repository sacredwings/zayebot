import React, {Component} from 'react';
import {connect} from 'react-redux';
import axios from "axios";
import $ from 'jquery';

//https://oauth.vk.com/token?grant_type=password&client_id=2274003&client_secret=hHbZxrka2uZ6jB1inYsH&username=%D0%9B%D0%9E%D0%93%D0%98%D0%9D&password=%D0%9F%D0%90%D0%A0%D0%9E%D0%9B%D0%AC&captcha_key=q24yud&captcha_sid=656412648896
//–∫–ª–∞—Å—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏
class SocAccountsList extends Component {
    constructor () {
        super();
        this.state = {
            formAddLogin: '',
            formAddPassword: '',
            formAddCode: '',
            formAddCodeShow: false,
            formInfo: '',
            formAlertClass: '',

            //–µ—â–µ –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ
            formAddCaptchaSid: null,
            formAddCaptchaKey: '',
        };

        this.onChangeFormAddAccount = this.onChangeFormAddAccount.bind(this);
        this.onClickAddAccount = this.onClickAddAccount.bind(this);

        this.onClickSelectAccount = this.onClickSelectAccount.bind(this);

    }

    //–ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    async componentDidMount() {

        //–∑–∞–≥—Ä—É–∑–∫–∞ –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –∏–∑ –±–∞–∑—ã
        let arAccounts = await axios.post('/api/account/get');
        if ((!arAccounts.data) || (!arAccounts.data.response))
            return;

        let list = {
            vk: arAccounts.data.response
        };

        //—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –≤ STORE
        this.props.arAccounts(list);
    }


    async onClickAddAccount (event) {
        //–ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª–∏–Ω—ã –ø–æ–ª–µ–π
        if ((this.state.formAddLogin.length >= 5) && (this.state.formAddPassword.length >= 8)) {

            //—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª–µ–π –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞
            let data = {
                login: this.state.formAddLogin,
                password: this.state.formAddPassword
            };

            if (this.state.formAddCodeShow)
                data.code = this.state.formAddCode;

            //–µ—Å–ª–∏ —Å–µ—Ä–≤–µ—Ä —Ç—Ä–µ–±—É–µ—Ç –∫–æ–¥ / –¥–æ–±–∞–≤–ª—è–µ–º –∫–æ–¥ –∫ –∑–∞–ø—Ä–æ—Å—É
            //if ((this.state.formErr === 200010005) || (this.state.formErr === 200010008))
                //data.code = this.state.formAddCode;

            //–¥–æ–±–∞–≤–ª—è–µ–º –∞–∫–∫–∞—É–Ω—Ç –≤ –±–∞–∑—É
            let result = await axios.post('/api/account/add', data);
            result = result.data;

            if (result.err) {

                if (result.err === 200010005)
                    this.setState({formAddCodeShow: true, formAlertClass: 'alert alert-warning', formInfo: result.msg});

                if (result.err === 200010008)
                    this.setState({formAddCodeShow: true, formAlertClass: 'alert alert-danger', formInfo: result.msg});

                if (result.err === 200010006)
                    this.setState({formAddCodeShow: false, formAlertClass: 'alert alert-warning', formInfo: result.msg});

                if (result.err === 200010007)
                    this.setState({formAddCodeShow: false, formAlertClass: 'alert alert-warning', formInfo: result.msg});

                console.log('no error')
            } else {

                console.log('error')
                this.setState({formAddCodeShow: false, formAlertClass: '', formInfo: ''});

                //–æ–±–Ω—É–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –æ—à–∏–±–∫–∏ —Ñ–æ—Ä–º—ã / –∑–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥—É–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
                this.setState({formErr: null});
                $('#modalAccountAdd').modal('hide');

                //–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
                this.componentDidMount();
            }

            /*
            //—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ—à–∏–±–∫–∏ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ñ–æ—Ä–º—ã
            if ((result.data) && (result.data.err !== 0)) {
                this.setState({formErr: result.data.err});

                //–≤—ã—Ö–æ–¥ –Ω–µ –∑–∞–∫—Ä—ã–≤–∞—è –º–æ–¥—É–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
                return;
            }*/




        } else {
            this.setState({formAddCodeShow: false, formAlertClass: 'alert alert-warning', formInfo: '–ü–æ–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω—ã –Ω–µ –≤–µ—Ä–Ω–æ'});
        }

    }

    //–∏–∑–º–µ–Ω–µ–Ω–∏–µ –ø–æ–ª–µ–π —Ñ–æ—Ä–º—ã –¥–æ–±–∞–ª–µ–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞
    onChangeFormAddAccount (event) {

        //–¥–ª–∏–Ω–∞ –ø–æ–ª–µ–π –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∞ 30 —Å–∏–º–≤–æ–ª–∞–º–∏
        if (event.target.value.length <= 30) {
            const name = event.target.name; //–∏–º—è –∏–∑–º–µ–Ω—è–µ–º–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞
            this.setState({[name]: event.target.value}); //–º–µ–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞
        }

        this.setState({formAlertClass: '', formInfo: ''});
    }

    //–∏–∑–º–µ–Ω–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞
    onClickSelectAccount (account, e) {
        this.props.onClickSelectAccount(account)
    }

    //–æ—Ç—Ä–∏—Å–æ–≤–∫–∞ –º–∞—Å—Å–∏–≤–∞ –∞–∫–∫–∞—É–Ω—Ç–æ–≤
    accounts () {
        let styleImg = {height: '60px'};
        let _this = this;
        if (this.props.accounts.vk.length) {
            return (
                <div className="list-group">
                    {this.props.accounts.vk.map(function (item, i) {
                        return (
                            <a href="#" key={i} onClick={_this.onClickSelectAccount.bind(this, item)}
                               className="list-group-item list-group-item-action flex-column align-items-start">
                                <div className="row">
                                    <div className="col-sm-4">
                                        <img style={styleImg} src={item.img_ava}/>
                                    </div>
                                    <div className="col-sm-8">
                                        <div className="d-flex w-100 justify-content-between">
                                            <h5 className="mb-1">{item.first_name}</h5>
                                            <small>VK</small>
                                        </div>
                                        <p className="mb-1">{item.last_name}</p>
                                        <small>...</small>
                                    </div>
                                </div>
                            </a>
                        )
                    })}
                </div>
            )
        }
    }

    //–æ—Ç—Ä–∏—Å–æ–≤–∫–∞ –º–∞—Å—Å–∏–≤–∞ –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –∏ –º–æ–¥—É–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
    render() {
        console.log('SocAccountsList-render');
        return (
            <>
                <button type="button" className="btn btn-primary btn-block mb-3" data-toggle="modal" data-target="#modalAccountAdd">+ –¥–æ–±–∞–≤–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç</button>
                {this.accounts()}
                <div className="modal fade" id="modalAccountAdd" tabIndex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
                    <div className="modal-dialog" role="document">
                        <div className="modal-content">
                            <div className="modal-header">
                                <h5 className="modal-title" id="exampleModalCenterTitle">+ –î–æ–±–∞–≤—å –∞–∫–∫–∞—É–Ω—Ç –í–ö–æ–Ω—Ç–∞–∫—Ç–µ</h5>
                                <button type="button" className="close" data-dismiss="modal" aria-label="Close">
                                    <span aria-hidden="true">&times;</span>
                                </button>
                            </div>
                            <div className="modal-body">
                                <form>
                                    <fieldset>
                                        {(this.state.formInfo) ?
                                            <div className={this.state.formAlertClass} role="alert">
                                                {this.state.formInfo}
                                            </div> : null}

                                        <div className="form-group">
                                            <label htmlFor="formAddLogin">–í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å –æ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ</label>
                                            <div className="input-group mb-3">

                                                <div className="input-group-prepend">
                                                    <span className="input-group-text" role="img" aria-label="jsx-a11y/accessible-emoji">üë®</span>
                                                </div>
                                                <input type="text" className="form-control form-control-lg" name="formAddLogin" id="formAddLogin" placeholder="–Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏–ª–∏ email –æ—Ç vk" minLength="5" required="" value={this.state.formAddLogin} onChange={this.onChangeFormAddAccount}/>
                                            </div>
                                        </div>
                                        <div className="form-group">
                                            <div className="input-group mb-3">
                                                <div className="input-group-prepend">
                                                    <span className="input-group-text" role="img" aria-label="jsx-a11y/accessible-emoji">üîí</span>
                                                </div>
                                                <input type="password" className="form-control form-control-lg" name="formAddPassword" placeholder="–ø–∞—Ä–æ–ª—å –æ—Ç –≤–∫" minLength="8" required="" value={this.state.formAddPassword} onChange={this.onChangeFormAddAccount} autoComplete="new-password"/>
                                            </div>
                                        </div>
                                        {(this.state.formAddCodeShow) ?
                                            <div className="form-group">
                                                <label htmlFor="formAddLogin">–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –æ—Ç–ø—Ä–∞–ª–µ–Ω–Ω—ã–π –≤ –°–ú–°</label>
                                                <div className="input-group mb-3">
                                                    <div className="input-group-prepend">
                                                        <span className="input-group-text" role="img" aria-label="jsx-a11y/accessible-emoji">üîí</span>
                                                    </div>
                                                    <input type="text" className="form-control form-control-lg" name="formAddCode" placeholder="–ö–æ–¥" minLength="8" maxLength="8" required="" value={this.state.formAddCode} onChange={this.onChangeFormAddAccount}/>
                                                </div>
                                            </div> : null}
                                    </fieldset>
                                </form>
                            </div>
                            <div className="modal-footer">
                                <button type="button" className="btn btn-secondary" data-dismiss="modal">–ó–∞–∫—Ä—ã—Ç—å</button>
                                <button type="button" className="btn btn-primary" onClick={this.onClickAddAccount}>–î–æ–±–∞–≤–∏—Ç—å</button>
                            </div>
                        </div>
                    </div>
                </div>
            </>
        )
    }

}

export default connect (
    state => ({
        accounts: state.accounts,
    }),
    dispatch => ({
        arAccounts: (list) => {
            dispatch({type: 'ACCOUNTS', list: list});
        }
    })
)(SocAccountsList);

